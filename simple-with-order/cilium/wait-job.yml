apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cilium-wait
  namespace: kube-system
  annotations:
    kluctl.io/hook: post-deploy-initial
spec:
  podSelector:
    matchLabels:
      job-name: cilium-wait
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - {}
  egress:
    - {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-wait"
  namespace: kube-system
  annotations:
    kluctl.io/hook: post-deploy-initial
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "cilium-wait"
  annotations:
    kluctl.io/hook: post-deploy-initial
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "cilium-wait"
  annotations:
    kluctl.io/hook: post-deploy-initial
subjects:
  - kind: ServiceAccount
    name: "cilium-wait"
    namespace: "kube-system"
roleRef:
  kind: ClusterRole
  name: "cilium-wait"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "cilium-wait"
  namespace: kube-system
  annotations:
    kluctl.io/hook: post-deploy-initial
spec:
  template:
    metadata:
      name: "cilium-wait"
    spec:
      restartPolicy: Never
      serviceAccountName: "cilium-wait"
      containers:
        - name: cilium-wait
          image: public.ecr.aws/docker/library/alpine:3.17.3
          command:
            - /bin/sh
            - -c
            - |
              set -e
              apk add curl
              curl -LO "https://dl.k8s.io/release/v1.26.0/bin/linux/amd64/kubectl"
              chmod +x kubectl
              mv kubectl /usr/local/bin/

              echo "Waiting for CRDs to get ready..."
              while ! kubectl get crd ciliumnetworkpolicies.cilium.io; do
                sleep 1
              done
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
